"use strict";(self.webpackChunk_wcat_tools_docs=self.webpackChunk_wcat_tools_docs||[]).push([[720],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,y=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(y,l(l({ref:t},u),{},{components:n})):r.createElement(y,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8997:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s}});var r=n(3117),o=(n(7294),n(3905));const a={description:"Learn how to deploy the WCAT-Scanner lite platform on any machine.",id:"deployment",title:"Deployment"},l=void 0,c={unversionedId:"deployment",id:"deployment",title:"Deployment",description:"Learn how to deploy the WCAT-Scanner lite platform on any machine.",source:"@site/docs/deployment.md",sourceDirName:".",slug:"/deployment",permalink:"/documentation/deployment",draft:!1,editUrl:"https://github.com/wcat-org/wcat-scanner-docs/edit/main/docs/deployment.md",tags:[],version:"current",frontMatter:{description:"Learn how to deploy the WCAT-Scanner lite platform on any machine.",id:"deployment",title:"Deployment"},sidebar:"someSidebar",previous:{title:"Getting started",permalink:"/documentation/self-hosting-start"}},i={},s=[{value:"Getting Started",id:"getting-started",level:2},{value:"Docker",id:"docker",level:2},{value:"CLI",id:"cli",level:2},{value:"AWS EC2",id:"aws-ec2",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Deploy all things WCAT-Scanner Lite on your own servers."),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"The quickest way to deploy the suite on the server is to install the ",(0,o.kt)("inlineCode",{parentName:"p"},"WCAT-Scanner")," CLI by running ",(0,o.kt)("inlineCode",{parentName:"p"},"cargo install wcat_cli")," on the server or in a Dockerfile and run the ",(0,o.kt)("inlineCode",{parentName:"p"},"a11ywatch start")," command either in ",(0,o.kt)("inlineCode",{parentName:"p"},"CMD")," or as a sidecar on your instance."),(0,o.kt)("h2",{id:"docker"},"Docker"),(0,o.kt)("p",null,"Another simple way to deploy is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/a11ywatch/a11ywatch"},"@wcat/a11ywatch")," docker image. By the default the main entry to the graphQL, and gRPC server starts on port 3280."),(0,o.kt)("h2",{id:"cli"},"CLI"),(0,o.kt)("p",null,"You can use the CLI and startup the instance normally or following the ",(0,o.kt)("a",{parentName:"p",href:"/documentation/cli#deploying-remotely"},"CLI")," section."),(0,o.kt)("h2",{id:"aws-ec2"},"AWS EC2"),(0,o.kt)("p",null,"Getting started on AWS EC2 linux with the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'# update packages\nsudo yum update -y\n# install development tools cc\nsudo yum groupinstall "Development Tools"\n# install docker\nsudo yum install docker -y\n# start docker\nsudo service docker start\n# install command to group\nsudo usermod -a -G docker ec2-user\n# install docker compose\nsudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose\n# install rust\nsudo curl https://sh.rustup.rs -sSf | sh -s -- -y\n# configure shell to use new rust path\n$HOME/.cargo/env\n# install wcat\ncargo install wcat_cli\n# start wcat\nwcat start\n# run scan on website this works internally on the container too\nwcat scan --url https://wcat.dev --save\n')),(0,o.kt)("p",null,"Make sure to update your security groups to allow inbound traffic on port ",(0,o.kt)("inlineCode",{parentName:"p"},"3280")," for the API instance."))}p.isMDXComponent=!0}}]);